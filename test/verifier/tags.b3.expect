Verifying TestColors ...
----- Proof obligation:
  (forall list: List pattern Length(list) :: <=(0, Length(list)))
  =(red, Red())
  =(green, Green())
  |-
  not(=(red, green))
----- Proof obligation:
  (forall list: List pattern Length(list) :: <=(0, Length(list)))
  =(red, Red())
  =(green, Green())
  =(c, Gray(50))
  |-
  not(=(red, c))
Verifying TestLists ...
----- Proof obligation:
  (forall list: List pattern Length(list) :: <=(0, Length(list)))
  =(a, Nil())
  =(b, Cons(500, list))
  |-
  not(=(a, b))
----- Proof obligation:
  (forall list: List pattern Length(list) :: <=(0, Length(list)))
  =(a, Nil())
  =(b, Cons(500, list))
  not(=(a, b))
  =(n, Length(list))
  |-
  not(=(n, -(9)))
